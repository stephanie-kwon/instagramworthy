// <auto-generated />
using InstagramWorthy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace InstagramWorthy.Migrations
{
    [DbContext(typeof(YourContext))]
    partial class YourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("InstagramWorthy.Models.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PlaceId");

                    b.Property<int>("UserId");

                    b.HasKey("LikeId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("likes");
                });

            modelBuilder.Entity("InstagramWorthy.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("PicUrl");

                    b.Property<int>("UserId");

                    b.HasKey("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("places");
                });

            modelBuilder.Entity("InstagramWorthy.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PicUrl");

                    b.Property<int?>("reviewPlaceId");

                    b.Property<int?>("reviewuploaderUserId");

                    b.HasKey("ReviewId");

                    b.HasIndex("reviewPlaceId");

                    b.HasIndex("reviewuploaderUserId");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("InstagramWorthy.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("ProfileUrl");

                    b.Property<DateTime>("Updated_at");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("InstagramWorthy.Models.Like", b =>
                {
                    b.HasOne("InstagramWorthy.Models.Place", "place")
                        .WithMany("Liked")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InstagramWorthy.Models.User", "liker")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InstagramWorthy.Models.Place", b =>
                {
                    b.HasOne("InstagramWorthy.Models.User", "Uploader")
                        .WithMany("Places")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InstagramWorthy.Models.Review", b =>
                {
                    b.HasOne("InstagramWorthy.Models.Place", "review")
                        .WithMany("Reviews")
                        .HasForeignKey("reviewPlaceId");

                    b.HasOne("InstagramWorthy.Models.User", "reviewuploader")
                        .WithMany("Reviews")
                        .HasForeignKey("reviewuploaderUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
